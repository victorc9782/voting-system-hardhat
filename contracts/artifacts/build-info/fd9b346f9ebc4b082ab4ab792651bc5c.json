{
	"id": "fd9b346f9ebc4b082ab4ab792651bc5c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Voting.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n/**\n * @title Voting\n * @dev Voting Platform\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\ncontract Voting {\n\n    address _admin;\n\n    constructor() {\n        _admin = msg.sender;\n    }\n\n    /**\n     * @dev Check if the message sender is admin\n    **/\n    modifier isAdmin() {\n        require(msg.sender == _admin, \"Only admin can call this function\");\n        _;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Voting.sol": {
				"Voting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Voting Platform",
						"kind": "dev",
						"methods": {},
						"title": "Voting",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Voting.sol\":177:457  contract Voting {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Voting.sol\":221:271  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Voting.sol\":254:264  msg.sender */\n  caller\n    /* \"contracts/Voting.sol\":245:251  _admin */\n  0x00\n  dup1\n    /* \"contracts/Voting.sol\":245:264  _admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Voting.sol\":177:457  contract Voting {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Voting.sol\":177:457  contract Voting {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206c24e54a024247968a7f6af515de488e627c41cc64b7b20cd1da04c7c91b15f964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea26469706673582212206c24e54a024247968a7f6af515de488e627c41cc64b7b20cd1da04c7c91b15f964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x24E54A024247968A7F6AF515DE BASEFEE DUP15 PUSH3 0x7C41CC PUSH5 0xB7B20CD1DA DIV 0xC7 0xC9 SHL ISZERO 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "177:280:0:-:0;;;221:50;;;;;;;;;;254:10;245:6;;:19;;;;;;;;;;;;;;;;;;177:280;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206c24e54a024247968a7f6af515de488e627c41cc64b7b20cd1da04c7c91b15f964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x24E54A024247968A7F6AF515DE BASEFEE DUP15 PUSH3 0x7C41CC PUSH5 0xB7B20CD1DA DIV 0xC7 0xC9 SHL ISZERO 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "177:280:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 457,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 457,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 457,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 271,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 271,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 271,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 221,
									"end": 271,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 254,
									"end": 264,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 245,
									"end": 251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 245,
									"end": 264,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 245,
									"end": 264,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 245,
									"end": 264,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 177,
									"end": 457,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 457,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 457,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 457,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 457,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 177,
									"end": 457,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 457,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c24e54a024247968a7f6af515de488e627c41cc64b7b20cd1da04c7c91b15f964736f6c63430008120033",
									".code": [
										{
											"begin": 177,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 457,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Voting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Voting Platform\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Voting\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"keccak256\":\"0x652f0b4aed428ca11106aac966ecd65ac3addf9f4b72046bb1cd66f545316f20\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://207105150becd18e8edc544a3cda7f1e4eb2e016ef615d6a36f0a81240118f36\",\"dweb:/ipfs/QmUTJ5aFBvBuhEZ5U7Ef48jsyzJTKGqZKcusFPnPgWLMJz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Voting.sol:Voting",
								"label": "_admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Voting.sol": {
				"ast": {
					"absolutePath": "contracts/Voting.sol",
					"exportedSymbols": {
						"Voting": [
							27
						]
					},
					"id": 28,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Voting",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:106:0",
								"text": " @title Voting\n @dev Voting Platform\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 27,
							"linearizedBaseContracts": [
								27
							],
							"name": "Voting",
							"nameLocation": "186:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_admin",
									"nameLocation": "208:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 27,
									"src": "200:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "200:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "235:36:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 7,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "245:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 8,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "254:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "258:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "254:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "245:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "245:19:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:0"
									},
									"scope": 27,
									"src": "221:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "361:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 17,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "379:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "383:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "379:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 19,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "393:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "379:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "401:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
																"typeString": "literal_string \"Only admin can call this function\""
															},
															"value": "Only admin can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
																"typeString": "literal_string \"Only admin can call this function\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "371:66:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "447:1:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "277:60:0",
										"text": " @dev Check if the message sender is admin*"
									},
									"id": 26,
									"name": "isAdmin",
									"nameLocation": "351:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:0"
									},
									"src": "342:113:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 28,
							"src": "177:280:0",
							"usedErrors": []
						}
					],
					"src": "37:420:0"
				},
				"id": 0
			}
		}
	}
}